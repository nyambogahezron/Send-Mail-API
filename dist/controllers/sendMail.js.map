{"version":3,"file":"sendMail.js","sourceRoot":"","sources":["../../controllers/sendMail.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,4DAAoC;AACpC,sDAA8B;AAE9B,6DAA0D;AAE7C,QAAA,QAAQ,GAAG,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC1E,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAExD,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,YAAY,IAAI,CAAC,OAAO,EAAE,CAAC;QAClD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,yBAAyB,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,IAAI,MAAM,GAAG;QACZ,OAAO,EAAE,OAAO;QAChB,IAAI,EAAE;YACL,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK;YACvB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI;SACtB;KACD,CAAC;IAEF,IAAI,WAAW,GAAG,oBAAU,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IAErD,IAAI,aAAa,GAAG,IAAI,iBAAO,CAAC;QAC/B,KAAK,EAAE,SAAS;QAChB,OAAO,EAAE;YACR,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,oCAAoC;SAC1C;KACD,CAAC,CAAC;IAEH,IAAI,QAAQ,GAAG;QACd,IAAI,EAAE;YACL,IAAI,EAAE,iBAAiB;YACvB,KAAK,EAAE,SAAS,KAAK,UAAU,IAAI,EAAE;YACrC,KAAK,EAAE,OAAO;SACd;KACD,CAAC;IAEF,IAAI,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAEhD,IAAI,OAAO,GAAG;QACb,IAAI,EAAE,KAAK;QACX,EAAE,EAAE,2BAA2B;QAC/B,OAAO,EAAE,YAAY;QACrB,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,SAAS;QACpB,UAAU,EAAE,SAAS;KACrB,CAAC;IAEF,MAAM,QAAQ,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAErD,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,sBAAsB,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,yBAAyB,EAAE,CAAC,CAAC;AACjE,CAAC,CAAA,CAAC,CAAC","sourcesContent":["import nodemailer from 'nodemailer';\nimport Mailgen from 'mailgen';\nimport { Request, Response } from 'express';\nimport { AsyncHandler } from '../middleware/AsyncHandler';\n\nexport const SendMail = AsyncHandler(async (req: Request, res: Response) => {\n\tconst { name, email, emailSubject, userMsg } = req.body;\n\n\tif (!name || !email || !emailSubject || !userMsg) {\n\t\treturn res.status(400).json({ msg: 'All fields are required' });\n\t}\n\n\tlet config = {\n\t\tservice: 'gmail',\n\t\tauth: {\n\t\t\tuser: process.env.email,\n\t\t\tpass: process.env.pass,\n\t\t},\n\t};\n\n\tlet transporter = nodemailer.createTransport(config);\n\n\tlet MailGenerator = new Mailgen({\n\t\ttheme: 'default',\n\t\tproduct: {\n\t\t\tname: name,\n\t\t\tlink: 'https://nyambogahezron.vercel.app/',\n\t\t},\n\t});\n\n\tlet response = {\n\t\tbody: {\n\t\t\tname: 'Hezron Nyamboga',\n\t\t\tintro: `From: ${email} Name: ${name}`,\n\t\t\toutro: userMsg,\n\t\t},\n\t};\n\n\tlet mailBody = MailGenerator.generate(response);\n\n\tlet message = {\n\t\tfrom: email,\n\t\tto: 'hezronnyamboga6@gmail.com',\n\t\tsubject: emailSubject,\n\t\thtml: mailBody,\n\t\tinReplyTo: undefined,\n\t\treferences: undefined,\n\t};\n\n\tconst sendMail = await transporter.sendMail(message);\n\n\tif (!sendMail) {\n\t\treturn res.status(500).json({ msg: 'Failed to send email' });\n\t}\n\n\treturn res.status(200).json({ msg: 'Email sent successfully' });\n});\n"]}